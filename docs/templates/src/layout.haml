!!!
%html
  %head
    %meta(http-equiv="content-type" value="text/html;charset=utf8")
    %meta(name="viewport" content="width=device-width, initial-scale=1")
    %meta(name="generator" value="{{generator}}")
    %meta(rel="icon" type="image/x-icon" href="favicon.ico")
    %title Theme Juice CLI - WordPress development made easy
    :javascript
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
      ga('create', 'UA-53644528-2', 'auto');
      ga('send', 'pageview');
    {{{stylesheet_tags}}}
    %link(rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css")
  %body#top(class="{{{name}}}")

    %header.header__wrapper
      .header

        .logo
          %a(href="/" title="Theme Juice Command Line Interface")
            %h4.logo__type
              Theme Juice
              %span CLI

        %nav.navigation
          %a.navigation__item(href="/create" title="Create a new project")
            Create
          %a.navigation__item(href="/setup" title="Setup an existing project")
            Setup
          %a.navigation__item(href="/delete" title="Delete a project")
            Delete
          %a.navigation__item(href="/deploy" title="Deploy a project")
            Deploy
          %a.navigation__item(href="https://github.com/ezekg/theme-juice-cli" target="_blank" title="View project on GitHub")
            %i.fa.fa-github

    .index-only
      %section.hero__wrapper
        .hero

          .hero__content
            %h1 WordPress development made easy
            %p
              %strong
                <code>tj</code> is a command line utility that generates, manages and deploys WordPress development applications.
            %a(class="button" href="#" alt="Watch the introduction video")
              %i.fa.fa-play-circle
              Watch Intro Video

    %main.main__wrapper
      .main

        %aside.sidebar
          %nav.sidebar__navigation

            .index-only
              %a.sidebar__navigation__item(href="#INTRODUCTION" title="Introduction")
                Introduction

              %a.sidebar__navigation__item(href="#REQUIREMENTS" title="Requirements")
                Requirements

              %a.sidebar__navigation__item(href="#INSTALLATION" title="Installation")
                Installation

            {{#section_heads}}
            %a.sidebar__navigation__item(href="\#{{id}}" title="{{text}}")
              {{text}}
            {{/section_heads}}

        %article.main__content

          .index-only
            %h2#INTRODUCTION
              Introduction
            %p
              %strong
                Meet <code>tj</code>, a command line utility that allows you to generate, manage and deploy new local WordPress development applications in seconds using Vagrant and Capistrano.
            %p
              <code>tj</code> handles all of the hard stuff: creation of a local development environment, managing local and remote WordPress applications, and the most annoying part of all, <em>actually deploying those applications</em>!

            %h2#REQUIREMENTS
              Requirements
            %p
              %strong
                <code>tj</code> requires <a href="http://vagrantup.com/">Vagrant</a> and <a href="https://www.virtualbox.org/">VirtualBox</a> to be able to create virtual machines for local development. Please download and install both of these before getting started.
            %p
              I recommend one of the latest versions of Ruby MRI (2.2, 2.1, 2.0). <code>tj</code> requires at least MRI 1.9.3. For the full report, check out the <a href="https://travis-ci.org/ezekg/theme-juice-cli">Travis CI build status</a>, where I test against an array of Ruby interpreters.
            %p
              I also recommend you set up <a href="https://help.github.com/articles/generating-ssh-keys/">SSH-keys for GitHub</a>. Internally, <code>tj</code> uses <code>git clone</code> with SSH URLs, so things might break if you don't have your keys set up properly.

            %h2#INSTALLATION
              Installation
            %p
              %code gem install theme-juice

          {{{html}}}

    %footer.footer__wrapper
      .footer
        .footer__humans
          <i class="fa fa-code"></i> with <i class="fa fa-heart"></i> by <a href="http://produceresults.com" target="_blank">Produce Results</a>
        .footer__date
          Documentation was last generated on {{date}} using <a href="https://github.com/rtomayko/ronn" target="_blank">Ronn</a>
        .footer__source
          %a(href="https://github.com/ezekg/theme-juice-cli/tree/master/docs" target="_blank" title="View website source code")
            View Source

    %a.scroll-to-top(href="#top" title="Scroll to top")
      %i.fa.fa-level-up

    %script(type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/trianglify/0.4.0/trianglify.min.js")
    :coffee

      #
      # Generate hero background
      #
      heros = document.getElementsByClassName "hero__wrapper"

      for hero in heros
        pattern = Trianglify {
          width: window.innerWidth
          height: window.innerHeight
          x_colors: [
            "#1C2227"
            "#1C2227"
            "#214937"
            "#33CC33"
          ]
          y_colors: [
            "#1C2227"
            "#214937"
          ]
        }

        hero.setAttribute "style", "background-image: url(" + pattern.png() + ")"

      #
      # Sticky sidebar
      #
      main = document.getElementsByTagName("main")[0]
      sidebar = document.getElementsByTagName("aside")[0]
      threshold = main.offsetTop - 25

      getScrollPosition = () ->
        d = document.documentElement or document.body.parentNode or document.body
        vect = {}
        vect.x = if window.pageXOffset?
            window.pageXOffset
          else
            d.scrollLeft
        vect.y = if window.pageYOffset?
            window.pageYOffset
          else
            d.scrollTop

        vect

      window.addEventListener "scroll", () ->
        if window.innerWidth < 1120 or window.pageYOffset < threshold
          return

        pos = getScrollPosition()

        sidebar.style["-webkit-transform"] =
        sidebar.style["-moz-transform"] =
        sidebar.style["transform"] = "translateY(" + (pos.y - threshold) + "px)"

      #
      # Scroll to heading when link in sidebar is clicked
      #
      links = document.getElementsByTagName "a"
      target = getScrollPosition()
      offset = 250

      for link in links
        link.onclick = (e) ->
          return unless e.currentTarget?.hash

          e.preventDefault()

          hash = @.getAttribute "href"
          node = document.getElementById hash[1...]

          if hash is "#top"
            target = node.offsetTop
          else
            target = node.offsetTop + threshold - 75

          scrollTo document.body, target, 500
          removeClasses links, "active"

          unless node is document.body
            addClass node, "active"
            addClass @, "active"

      # Remove any active classes if scrolled past threshold
      window.addEventListener "scroll", () ->
        pos = getScrollPosition()

        if pos.y > target + offset or pos.y < target - offset

          # @NOTE Check if the scroll position is different in 50ms, and if
          #  it is, assume we're in the middle of an animation and don't
          #  remove the classes until we've stopped moving
          setTimeout () ->
            removeClasses links, "active" if getScrollPosition().y is pos.y
          , 50

      # Helpers
      scrollTo = (node, target, vel) ->
        y = node.scrollTop
        dy = target - y
        dt = 0
        i = 20

        animateScroll = () ->
          dt += i

          easeInOutQuad = (dt, y, dy, vel) ->
            dt /= vel / 2
            return dy / 2 * (dt * dt) + y if dt < 1
            dt--
            return -dy / 2 * (dt * (dt - 2) - 1) + y

          node.scrollTop = easeInOutQuad dt, y, dy, vel

          if dt < vel
            setTimeout animateScroll, i
            return

        do animateScroll
        return

      addClass = (node, klass) ->
        return if klass in node.className.split " "
        node.className = [node.className, klass].filter((s) -> s isnt "").join " "

      removeClasses = (links, klass) ->
        for link in links
          hash = link.getAttribute "href"

          unless hash[0] is "#"
            continue

          node = document.getElementById hash[1...]

          for el in [link, node]
            if el?.className? and klass in el.className.split " "
              el.className = el.className.replace klass, ""

tj(1) -- WordPress development made easy
========================================

## SYNOPSIS  

`tj` [<command>] [--flag=<arg>] [--flag]  

## DESCRIPTION  

**Theme Juice** is a WordPress development command line utility that allows you to scaffold out entire Vagrant development environments in seconds (using an Apache fork of [VVV](https://github.com/Varying-Vagrant-Vagrants/VVV) called [VVV-Apache](https://github.com/ericmann/vvv-apache.git) as the VM). It also allows you to manage dependencies and build tools the right way, and even handle deployments.  

## GLOBAL OPTIONS  

  * `--vm-box`=<repository>:  
    Force Vagrant box to use for VM  

  * `--vm-path`=<path>:  
    Force path to VM  

  * `--vm-ip`=<ip>:  
    Force IP address of VM    

  * `--vm-prefix`=<string>:  
    Force directory prefix for project in VM  

  * `--yolo`:  
    Say yes to anything and everything  

  * `--boring`:  
    Prints all output without any fancy formatting  

  * `--no-unicode`:  
    Prints all output without unicode characters  

  * `--no-colors`, `--no-color`:  
    Prints all output without color  

  * `--no-animations`:  
    Prints all output without animations (coming soon)  

  * `--no-landrush`:  
    Disable the `landrush` gem for managing DNS  

  * `--verbose`:  
    Prints out additional logging information  

  * `--dryrun`, `--dry-run`:  
    Run a command without actually doing anything  

## PRIMARY COMMANDS  

Run `tj help` [<command>] to view an individual command's man page.  

  * `create`, `new`, `mk`:  
    Create a new project
  
  * `setup`, `up`, `init`:  
    Setup an existing project
  
  * `delete`, `rm`, `remove`, `trash`:  
    Delete a project
    
## SECONDARY COMMANDS

  * `version`, `--version`, `-v`:  
    Print the current version

  * `list`, `ls`, `projects`, `apps`, `sites`:  
    List all projects

  * `vm`, `vagrant`, `vvv`=[<command>[,<command>]...]:  
    Manage development environment. Commands are proxied to your Vagrant installation so that they can be run from any directory.
    
## CONFIG COMMANDS

These run the corresponding command from your project's config file. They accept any number of commands, since the behavior and handling of input is defined within the config file itself.  
    
  * `install`, `build`=[<command>[,<command>]...]:  
    Run installation for project

  * `watch`, `dev`=[<command>[,<command>]...]:  
    Manage and run development build tools

  * `vendor`, `deps`=[<command>[,<command>]...]:  
    Manage PHP vendor dependencies

  * `dist`, `pkg`, `package`, `zip`=[<command>[,<command>]...]:  
    Package project for distribution

  * `wp`, `wordpress`=[<command>[,<command>]...]:  
    Manage WordPress installation

  * `backup`, `bk`=[<command>[,<command>]...]:  
    Backup project

  * `test`, `tests`, `spec`, `specs`=[<command>[,<command>]...]:  
    Manage and run project tests